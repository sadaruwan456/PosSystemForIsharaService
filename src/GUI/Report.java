/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DB.DB;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author OLE
 */
public class Report extends javax.swing.JPanel {

    public String title = "Report";

    private Report() {
        initComponents();
        start_date.setDate(new Date());

    }
    public static Report o;

    public static Report getObject() {
        if (o == null) {
            o = new Report();
        }
        return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        start_date = new com.toedter.calendar.JDateChooser();
        end_date = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        daily_service = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Report");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Start Day / Date");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("End day");

        start_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                start_datePropertyChange(evt);
            }
        });

        end_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                end_datePropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Vehicle's Service Report ");

        daily_service.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        daily_service.setText("Daily");
        daily_service.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daily_serviceActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton10.setText("Select Month");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Income Summery");

        jButton18.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton18.setText("Daily");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton19.setText("Select Month");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Loan Summery");

        jButton21.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton21.setText("Select Month");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton22.setText("Daily");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Out Come");

        jButton23.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton23.setText("Daily");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton24.setText("Select Month");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setText("New Customer");

        jButton25.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton25.setText("Daily");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton26.setText("Select Month");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Attendence");

        jButton27.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton27.setText("Monthly Attendence Report");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton28.setText("Daily");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);

        jTextField2.setEditable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(207, 207, 207))
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(start_date, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(204, 204, 204))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(daily_service, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(517, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel4, jLabel7});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(start_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(daily_service)
                    .addComponent(jButton10))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton18)
                    .addComponent(jButton19)
                    .addComponent(jLabel7))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton21)
                    .addComponent(jButton22)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton24)
                    .addComponent(jButton23)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton26)
                    .addComponent(jButton25)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jButton27)
                    .addComponent(jButton28))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        try {
            Date start_d = start_date.getDate();
            String start_date1 = new SimpleDateFormat("yyyy-MM-dd").format(start_d);

            Date end_d = end_date.getDate();
            String end_date1 = new SimpleDateFormat("yyyy-MM-dd").format(end_d);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("start_date", start_date1);
            parameters.put("end_date", end_date1);

            InputStream jr = Report.class.getResourceAsStream("/BILL/loan_summary_date_summery.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Found");
        }

    }//GEN-LAST:event_jButton21ActionPerformed

    private void daily_serviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daily_serviceActionPerformed
        // TODO add your handling code here:
        if (start_date.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Empty Feild !");
        } else {

            Date start_d = start_date.getDate();
            String start_date1 = new SimpleDateFormat("yyyy-MM-dd").format(start_d);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("service_date", start_date1);

            try {
                InputStream jr = Report.class.getResourceAsStream("/BILL/Daily_service_report.jasper");
                JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Data Not found");
            }
        }

    }//GEN-LAST:event_daily_serviceActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed

        Double total1_out = 0.0;
        Double total_in = 0.0;
        Date date1 = start_date.getDate();
        String st_date1 = new SimpleDateFormat("yyyy-MM-dd").format(date1);

        //total_outcome
        String outcome_qry = "SELECT SUM(grn.payment) AS totalamount FROM grn WHERE grn.g_date='" + st_date1 + "'";
        try {
            ResultSet rs1 = DB.search(outcome_qry);
            if (rs1.next()) {
                total1_out = Double.parseDouble(rs1.getString("totalamount"));

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Data Not found");
        }

        //profit
        String income_qry = "SELECT SUM(invoice.payment) AS totalincome FROM invoice WHERE invoice.DATETIME='" + st_date1 + "'";
        try {
            ResultSet rs2 = DB.search(income_qry);
            if (rs2.next()) {
                total_in = Double.parseDouble(rs2.getString("totalincome"));

            }

        } catch (Exception ex) {

        }

//        double income1 = Double.valueOf(total_in);
//        double outcome1 = Doubl(total1_out);
        double profit = total_in - total1_out;
//        String profit1 = String.valueOf(profit);

        Map<String, Object> parameters = new HashMap<>();

        parameters.put("income_date", st_date1);
        parameters.put("income_total", total_in);
        parameters.put("out_come", total1_out);
        parameters.put("d_profit", profit);

        try {
            InputStream jr = Customer.class.getResourceAsStream("/BILL/income_daily.jasper");

            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());

            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not found");
        }


    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        try {
            Date dd1 = start_date.getDate();
            String st_date = new SimpleDateFormat("yyyy-MM-dd").format(dd1);

            Date dd2 = end_date.getDate();
            String en_date = new SimpleDateFormat("yyyy-MM-dd").format(dd2);

            Map<String, Object> parameters = new HashMap<>();

            parameters.put("start_date", st_date);
            parameters.put("end_date", en_date);

            InputStream jr = Customer.class.getResourceAsStream("/BILL/Monthly_service_report.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Fount");
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        try {
            Date dd = start_date.getDate();
            String st_date = new SimpleDateFormat("yyyy-MM-dd").format(dd);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("d_loan_date", st_date);

            InputStream jr = Attendance.class.getResourceAsStream("/BILL/Daily_loan_summary.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Found");

        }


    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        try {
            Date startdate = start_date.getDate();
            Date enddate = end_date.getDate();

            String startdates = new SimpleDateFormat("yyyy-MM-dd").format(startdate);
            String enddates = new SimpleDateFormat("yyyy-MM-dd").format(enddate);

            String query1 = "SELECT  SUM(grn.payment) as dailyoutcome  FROM grn WHERE grn.g_date  between '" + startdates + "' AND '" + enddates + "'  GROUP BY grn.g_date;";
            ResultSet rsl1 = null;
            double outcome = 0.0;

            rsl1 = DB.search(query1);

            while (rsl1.next()) {
                double dailyoutcome = Double.valueOf(rsl1.getString("dailyoutcome"));
                outcome += dailyoutcome;
            }

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("startdate", startdates);
            parameters.put("enddate", enddates);

            parameters.put("outcome", outcome);

            InputStream jr = Report.class.getResourceAsStream("/BILL/MonthlyIncome.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Empty Date");
        }


    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:

        if (start_date.getDate() == null) {
            JOptionPane.showConfirmDialog(this, "Empty Feild");
        } else {
            Date dd1 = start_date.getDate();
            String date1 = new SimpleDateFormat("yyyy-MM-dd").format(dd1);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("date", date1);

            try {
                InputStream jr = Report.class.getResourceAsStream("/BILL/DailyOutCome.jasper");
                JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Data Not Found");
            }

        }


    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        try {
            Date dd1 = start_date.getDate();
            String stdate = new SimpleDateFormat("yyyy-MM-dd").format(dd1);
            Date dd2 = end_date.getDate();
            String endate = new SimpleDateFormat("yyyy-MM-dd").format(dd2);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("startdate", stdate);
            parameters.put("enddate", endate);

            InputStream jr = Report.class.getResourceAsStream("/BILL/MonthlyOutCome.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Found");
        }


    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed

        Date dd1 = start_date.getDate();
        String regd1 = new SimpleDateFormat("yyyy-MM-dd").format(dd1);

        Map<String, Object> parameters = new HashMap<>();
        parameters.put("regdate", regd1);

        try {
            InputStream jr = Report.class.getResourceAsStream("/BILL/newcustomer.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {

        }

        String sdf = new SimpleDateFormat("yyyy-MM-dd").format(start_date.getDate());
        String q1 = "select COUNT(attendence.Morning) as mprsnt from attendence where attendence.Morning='1' and attendence.date='" + sdf + "' GROUP by attendence.date";
        String q2 = "select COUNT(attendence.Morning) as mpabsnt from attendence where attendence.Morning='0' and attendence.date='" + sdf + "' GROUP by attendence.date;";
        String q3 = "select COUNT(attendence.Evening) as eprsnt from attendence where attendence.Evening='1' and attendence.date='" + sdf + "' GROUP by attendence.date;";
        String q4 = "select COUNT(attendence.Evening) as eabsnt from attendence where attendence.Evening='0' and attendence.date='" + sdf + "' GROUP by attendence.date;";

        ResultSet r1 = null;
        ResultSet r2 = null;
        ResultSet r3 = null;
        ResultSet r4 = null;
        int mpsnt = 0;
        int mabsnt = 0;
        int epsnt = 0;
        int eabsnt = 0;
        try {
            r1 = DB.search(q1);
            r2 = DB.search(q2);
            r3 = DB.search(q3);
            r4 = DB.search(q4);

            if (r1.next()) {
                mpsnt = r1.getInt(1);
            }
            if (r2.next()) {
                mabsnt = r1.getInt(1);
            }
            if (r3.next()) {
                epsnt = r1.getInt(1);
            }
            if (r4.next()) {
                eabsnt = r1.getInt(1);
            }

            Map<String, Object> m = new HashMap<>();
            m.put("date", sdf);
            m.put("mpresnt", mpsnt);
            m.put("mabsent", mabsnt);
            m.put("eprsnt", epsnt);
            m.put("eabsnt", eabsnt);

            InputStream jr = Report.class.getResourceAsStream("/BILL/dailyattendnts.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, m, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not found");
        }

    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        try {
            Date dd1 = start_date.getDate();
            String stdate1 = new SimpleDateFormat("yyyy-MM-dd").format(dd1);

            Date dd2 = end_date.getDate();
            String endate = new SimpleDateFormat("yyyy-MM-dd").format(dd2);

            String month1 = new SimpleDateFormat("MM").format(dd2);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("startmonth", stdate1);
            parameters.put("endmonth", endate);
            parameters.put("monthn", month1);

            InputStream jr = Report.class.getResourceAsStream("/BILL/monthlynewcustomers.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Found");
        }


    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        try {
            Date dd1 = start_date.getDate();
            String stdate1 = new SimpleDateFormat("yyyy-MM-dd").format(dd1);

            Date dd2 = end_date.getDate();
            String endate1 = new SimpleDateFormat("yyyy-MM-dd").format(dd2);

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("Startdate", stdate1);
            parameters.put("enddate", endate1);

            InputStream jr = Report.class.getResourceAsStream("/BILL/monthlyattendents.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, parameters, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Not Found");
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed

        String sdf = new SimpleDateFormat("yyyy-MM-dd").format(start_date.getDate());
        String q1 = "select COUNT(attendence.Morning) as mprsnt from attendence where attendence.Morning='1' and attendence.date='" + sdf + "' ";
        String q2 = "select COUNT(attendence.Morning) as mpabsnt from attendence where attendence.Morning='0' and attendence.date='" + sdf + "' ;";
        String q3 = "SELECT COUNT(attendence.Evening) AS eprsnt FROM attendence WHERE attendence.Evening= '1' AND attendence.DATE= '" + sdf + "' ;";
        String q4 = "select COUNT(attendence.Evening) as eabsnt from attendence where attendence.Evening='0' and attendence.date='" + sdf + "' ;";

        ResultSet r1 = null;
        ResultSet r2 = null;
        ResultSet r3 = null;
        ResultSet r4 = null;
        int mpsnt = 0;
        int mabsnt = 0;
        int epsnt = 0;
        int eabsnt = 0;
        try {
            r1 = DB.search(q1);
            r2 = DB.search(q2);
            r3 = DB.search(q3);
            r4 = DB.search(q4);

            if (r1.next()) {
                mpsnt = r1.getInt(1);
            }
            if (r2.next()) {
                mabsnt = r2.getInt(1);
            }
            if (r3.next()) {
                epsnt = r3.getInt(1);
            }
            if (r4.next()) {
                eabsnt = r4.getInt(1);
            }

            Map<String, Object> m = new HashMap<>();
            m.put("date", sdf);
            m.put("mpresnt", mpsnt);
            m.put("mabsent", mabsnt);
            m.put("eprsnt", epsnt);
            m.put("eabsnt", eabsnt);

            InputStream jr = Report.class.getResourceAsStream("/BILL/dailyattendnts.jasper");
            JasperPrint jp = JasperFillManager.fillReport(jr, m, DB.getConnection());
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Not Found Data");
        }


    }//GEN-LAST:event_jButton28ActionPerformed

    private void start_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_start_datePropertyChange

        validateDate();
        if (!(start_date.getDate() == null)) {

            jTextField1.setText(new SimpleDateFormat("yyyy-MM-dd").format(start_date.getDate()));
        }
    }//GEN-LAST:event_start_datePropertyChange

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void end_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_end_datePropertyChange
        if (!(end_date.getDate() == null)) {

            jTextField2.setText(new SimpleDateFormat("yyyy-MM-dd").format(end_date.getDate()));
        }
    }//GEN-LAST:event_end_datePropertyChange
    String DateToSearch;

    private void validateDate() {
        Date DayFromSelected = start_date.getDate();
        Date Today = new Date();
        if (DayFromSelected.after(Today)) {
            try {

                JOptionPane.showMessageDialog(this, "The day you enter can not be in the future", "Invalid date", JOptionPane.ERROR_MESSAGE);
                DateToSearch = new SimpleDateFormat("yyyy-MM-dd").format(Today);

                Date day = new SimpleDateFormat("yyyy-MM-dd").parse(DateToSearch);
                start_date.setDate(day);

            } catch (Exception e) {

            }

        } else {
            DateToSearch = new SimpleDateFormat("yyyy-MM-dd").format(DayFromSelected);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton daily_service;
    private com.toedter.calendar.JDateChooser end_date;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private com.toedter.calendar.JDateChooser start_date;
    // End of variables declaration//GEN-END:variables
}
