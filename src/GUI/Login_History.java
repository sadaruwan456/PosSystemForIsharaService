/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Cryptography.Cryption;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author OLE
 */
public class Login_History extends javax.swing.JPanel {

    public String title = "Login History";

    private Login_History() {
        initComponents();
        Loaddata();
        search.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sortData();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sortData();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sortData();
            }
        });
    }
    public static Login_History o;

    public static Login_History getObject() {
        if (o == null) {
            o = new Login_History();
        }

        return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Login Date", "Login Time", "User Type", "Status", "Attempt Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Filter ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables

    private void Loaddata() {
        try {
            File file = new File(System.getenv("PROGRAMDATA") + "\\Ishara Auto Service\\Compleate Log\\user.log");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            BufferedReader br = new BufferedReader(new FileReader(file));
            
            String[] data;
            List<String> temp = new ArrayList<String>();
           String line = null;
            while ( (line= br.readLine()) != null) {
               
                temp.add(line);
            }
           
            for(int i = temp.size()-1; i >= 0;i--){

                Vector v = new Vector();
                data = temp.get(i).split(",");

                v.add(Cryption.decript(data[0]));
                v.add(Cryption.decript(data[1]));
                v.add(Cryption.decript(data[2]));
                v.add(Cryption.decript(data[3]));
                v.add(Cryption.decript(data[4]));
                v.add(Cryption.decript(data[5]));
                dtm.addRow(v);
            }
                
               
           

            br.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void sortData() {
        Loaddata();
        TableRowSorter<TableModel> soter = new TableRowSorter<>(((DefaultTableModel) jTable1.getModel()));
        soter.setRowFilter(RowFilter.regexFilter("(?i)"+search.getText()));
        jTable1.setRowSorter(soter);

    }

}
